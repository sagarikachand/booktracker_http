{"version":3,"sources":["/Users/sagarika.c/Downloads/angular-http-communication/02/demos/demos/Before/booktracker/src/$_lazy_route_resource lazy","/Users/sagarika.c/Downloads/angular-http-communication/02/demos/demos/Before/booktracker/src/app/add-book/add-book.component.html","/Users/sagarika.c/Downloads/angular-http-communication/02/demos/demos/Before/booktracker/src/app/add-book/add-book.component.ts","/Users/sagarika.c/Downloads/angular-http-communication/02/demos/demos/Before/booktracker/src/app/add-reader/add-reader.component.html","/Users/sagarika.c/Downloads/angular-http-communication/02/demos/demos/Before/booktracker/src/app/add-reader/add-reader.component.ts","/Users/sagarika.c/Downloads/angular-http-communication/02/demos/demos/Before/booktracker/src/app/app-routing.module.ts","/Users/sagarika.c/Downloads/angular-http-communication/02/demos/demos/Before/booktracker/src/app/app.component.css","/Users/sagarika.c/Downloads/angular-http-communication/02/demos/demos/Before/booktracker/src/app/app.component.html","/Users/sagarika.c/Downloads/angular-http-communication/02/demos/demos/Before/booktracker/src/app/app.component.ts","/Users/sagarika.c/Downloads/angular-http-communication/02/demos/demos/Before/booktracker/src/app/app.module.ts","/Users/sagarika.c/Downloads/angular-http-communication/02/demos/demos/Before/booktracker/src/app/core/book-tracker-error-handler.service.ts","/Users/sagarika.c/Downloads/angular-http-communication/02/demos/demos/Before/booktracker/src/app/core/bookResolver.service.ts","/Users/sagarika.c/Downloads/angular-http-communication/02/demos/demos/Before/booktracker/src/app/core/cache-interceptor.ts","/Users/sagarika.c/Downloads/angular-http-communication/02/demos/demos/Before/booktracker/src/app/core/core.module.ts","/Users/sagarika.c/Downloads/angular-http-communication/02/demos/demos/Before/booktracker/src/app/core/data.service.ts","/Users/sagarika.c/Downloads/angular-http-communication/02/demos/demos/Before/booktracker/src/app/core/header.intercceptor.ts","/Users/sagarika.c/Downloads/angular-http-communication/02/demos/demos/Before/booktracker/src/app/core/http-cache.service.ts","/Users/sagarika.c/Downloads/angular-http-communication/02/demos/demos/Before/booktracker/src/app/core/log-response.interceptor.ts","/Users/sagarika.c/Downloads/angular-http-communication/02/demos/demos/Before/booktracker/src/app/core/logger.service.ts","/Users/sagarika.c/Downloads/angular-http-communication/02/demos/demos/Before/booktracker/src/app/core/module-import-guard.ts","/Users/sagarika.c/Downloads/angular-http-communication/02/demos/demos/Before/booktracker/src/app/dashboard/dashboard.component.html","/Users/sagarika.c/Downloads/angular-http-communication/02/demos/demos/Before/booktracker/src/app/dashboard/dashboard.component.ts","/Users/sagarika.c/Downloads/angular-http-communication/02/demos/demos/Before/booktracker/src/app/data.ts","/Users/sagarika.c/Downloads/angular-http-communication/02/demos/demos/Before/booktracker/src/app/edit-book/edit-book.component.html","/Users/sagarika.c/Downloads/angular-http-communication/02/demos/demos/Before/booktracker/src/app/edit-book/edit-book.component.ts","/Users/sagarika.c/Downloads/angular-http-communication/02/demos/demos/Before/booktracker/src/app/edit-reader/edit-reader.component.html","/Users/sagarika.c/Downloads/angular-http-communication/02/demos/demos/Before/booktracker/src/app/edit-reader/edit-reader.component.ts","/Users/sagarika.c/Downloads/angular-http-communication/02/demos/demos/Before/booktracker/src/app/models/bookTrackerError.ts","/Users/sagarika.c/Downloads/angular-http-communication/02/demos/demos/Before/booktracker/src/app/services/badge.service.ts","/Users/sagarika.c/Downloads/angular-http-communication/02/demos/demos/Before/booktracker/src/environments/environment.ts","/Users/sagarika.c/Downloads/angular-http-communication/02/demos/demos/Before/booktracker/src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"../../../../../src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/sagarika.c/Downloads/angular-http-communication/02/demos/demos/Before/booktracker/src/$$_lazy_route_resource lazy\n// module id = ../../../../../src/$$_lazy_route_resource lazy recursive\n// module chunks = main","module.exports = \"<div class=\\\"col-lg-5\\\">\\r\\n  <div class=\\\"well bs-component\\\">\\r\\n    <form #addBookForm=\\\"ngForm\\\" (ngSubmit)=\\\"saveBook(addBookForm.value)\\\" class=\\\"form-horizontal\\\">\\r\\n      <fieldset>\\r\\n        <legend>Add New Book</legend>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"inputTitle\\\" class=\\\"col-lg-3 control-label\\\">Title</label>\\r\\n          <div class=\\\"col-lg-8\\\">\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputTitle\\\" placeholder=\\\"Title\\\" name=\\\"title\\\" ngModel>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"inputAuthor\\\" class=\\\"col-lg-3 control-label\\\">Author</label>\\r\\n          <div class=\\\"col-lg-8\\\">\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputAuthor\\\" placeholder=\\\"Author\\\" name=\\\"author\\\" ngModel>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"inputYear\\\" class=\\\"col-lg-3 control-label\\\">Year</label>\\r\\n          <div class=\\\"col-lg-8\\\">\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputYear\\\" placeholder=\\\"Year Published\\\" name=\\\"publicationYear\\\" ngModel>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <div class=\\\"col-lg-8 col-lg-offset-3\\\">\\r\\n            <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Save</button>\\r\\n          </div>\\r\\n        </div>\\r\\n      </fieldset>\\r\\n    </form>\\r\\n  </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/sagarika.c/Downloads/angular-http-communication/02/demos/demos/Before/booktracker/src/app/add-book/add-book.component.html\n// module id = ../../../../../src/app/add-book/add-book.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport  { DataService} from '../core/data.service'\r\n\r\nimport { Book } from \"app/models/book\";\r\n\r\n@Component({\r\n  selector: 'app-add-book',\r\n  templateUrl: './add-book.component.html',\r\n  styles: []\r\n})\r\nexport class AddBookComponent implements OnInit {\r\n\r\n  constructor( private dataService : DataService) { }\r\n\r\n  ngOnInit() { }\r\n\r\n  saveBook(formValues: any): void {\r\n    let newBook: Book = <Book>formValues;\r\n    newBook.bookID = 0;\r\n    console.log(newBook);\r\n\r\n     this.dataService.addBook(newBook)\r\n       .subscribe(\r\n         (data : Book)=> {console.log( data ) ; console.log(\"this was add book\")},\r\n         (err ) => console.log( err)\r\n       )\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// /Users/sagarika.c/Downloads/angular-http-communication/02/demos/demos/Before/booktracker/src/app/add-book/add-book.component.ts","module.exports = \"<div class=\\\"col-lg-5\\\">\\r\\n  <div class=\\\"well bs-component\\\">\\r\\n    <form #addReaderForm=\\\"ngForm\\\" (ngSubmit)=\\\"saveReader(addReaderForm.value)\\\" class=\\\"form-horizontal\\\">\\r\\n      <fieldset>\\r\\n        <legend>Add Reader</legend>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"inputGoal\\\" class=\\\"col-lg-3 control-label\\\">Name</label>\\r\\n          <div class=\\\"col-lg-8\\\">\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputGoal\\\" placeholder=\\\"Name\\\" name=\\\"name\\\" ngModel>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"inputGoal\\\" class=\\\"col-lg-3 control-label\\\">Weekly Goal</label>\\r\\n          <div class=\\\"col-lg-8\\\">\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputGoal\\\" placeholder=\\\"Weekly Goal\\\" name=\\\"weeklyReadingGoal\\\" ngModel>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"inputTotal\\\" class=\\\"col-lg-3 control-label\\\">Total Read</label>\\r\\n          <div class=\\\"col-lg-8\\\">\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputTotal\\\" placeholder=\\\"Total Minutes Read\\\" name=\\\"totalMinutesRead\\\" ngModel>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <div class=\\\"col-lg-10 col-lg-offset-3\\\">\\r\\n            <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Save</button>\\r\\n          </div>\\r\\n        </div>\\r\\n      </fieldset>\\r\\n    </form>\\r\\n  </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/sagarika.c/Downloads/angular-http-communication/02/demos/demos/Before/booktracker/src/app/add-reader/add-reader.component.html\n// module id = ../../../../../src/app/add-reader/add-reader.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\n\r\nimport { Reader } from \"app/models/reader\";\r\nimport { DataService } from 'app/core/data.service';\r\n\r\n@Component({\r\n  selector: 'app-add-reader',\r\n  templateUrl: './add-reader.component.html',\r\n  styles: []\r\n})\r\nexport class AddReaderComponent implements OnInit {\r\n\r\n  constructor(private dataService: DataService) { }\r\n\r\n  ngOnInit() { }\r\n\r\n  saveReader(formValues: any): void {\r\n    let newReader: Reader = <Reader>formValues;\r\n    newReader.readerID = 0;\r\n    this.dataService.addReader(newReader)\r\n      .subscribe(\r\n      (data: Reader) => {\r\n        console.log(data);\r\n        console.log(` this reader was added `)\r\n      }\r\n      )\r\n\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// /Users/sagarika.c/Downloads/angular-http-communication/02/demos/demos/Before/booktracker/src/app/add-reader/add-reader.component.ts","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { AddBookComponent } from \"app/add-book/add-book.component\";\r\nimport { AddReaderComponent } from \"app/add-reader/add-reader.component\";\r\nimport { DashboardComponent } from \"app/dashboard/dashboard.component\";\r\nimport { EditBookComponent } from \"app/edit-book/edit-book.component\";\r\nimport { EditReaderComponent } from \"app/edit-reader/edit-reader.component\";\r\nimport { BookResolverService } from 'app/core/bookResolver.service';\r\n\r\nconst routes: Routes = [\r\n  // { path: 'dashboard', component: DashboardComponent },\r\n  { path: 'dashboard', component: DashboardComponent , resolve: {resolvedBooks : BookResolverService}},\r\n  { path: 'addbook', component: AddBookComponent },\r\n  { path: 'addreader', component: AddReaderComponent },\r\n  { path: 'editreader/:id', component: EditReaderComponent },\r\n  { path: 'editbook/:id', component: EditBookComponent },\r\n  { path: '', redirectTo: 'dashboard', pathMatch: 'full' }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// /Users/sagarika.c/Downloads/angular-http-communication/02/demos/demos/Before/booktracker/src/app/app-routing.module.ts","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/sagarika.c/Downloads/angular-http-communication/02/demos/demos/Before/booktracker/src/app/app.component.css\n// module id = ../../../../../src/app/app.component.css\n// module chunks = main","module.exports = \"<nav class=\\\"navbar navbar-default\\\">\\r\\n    <div class=\\\"container-fluid\\\">\\r\\n        <!-- Brand and toggle get grouped for better mobile display -->\\r\\n        <div class=\\\"navbar-header\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"navbar-toggle collapsed\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#bs-example-navbar-collapse-1\\\">\\r\\n                <span class=\\\"sr-only\\\">Toggle navigation</span>\\r\\n                <span class=\\\"icon-bar\\\"></span>\\r\\n                <span class=\\\"icon-bar\\\"></span>\\r\\n                <span class=\\\"icon-bar\\\"></span>\\r\\n            </button>\\r\\n            <a class=\\\"navbar-brand\\\" [routerLink]=\\\"['/dashboard']\\\">Book Tracker</a>\\r\\n        </div>\\r\\n\\r\\n        <!-- Collect the nav links, forms, and other content for toggling -->\\r\\n        <div class=\\\"collapse navbar-collapse\\\" id=\\\"bs-example-navbar-collapse-1\\\">\\r\\n            <ul class=\\\"nav navbar-nav\\\">\\r\\n                <li><a [routerLink]=\\\"['/addbook']\\\">Add Book<span class=\\\"sr-only\\\">(current)</span></a></li>\\r\\n                <li><a [routerLink]=\\\"['/addreader']\\\">Add Reader</a></li>\\r\\n            </ul>\\r\\n        </div><!-- /.navbar-collapse -->\\r\\n    </div><!-- /.container-fluid -->\\r\\n</nav>\\r\\n\\r\\n<router-outlet></router-outlet>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/sagarika.c/Downloads/angular-http-communication/02/demos/demos/Before/booktracker/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = main","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/sagarika.c/Downloads/angular-http-communication/02/demos/demos/Before/booktracker/src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { AddBookComponent } from './add-book/add-book.component';\r\nimport { AddReaderComponent } from './add-reader/add-reader.component';\r\nimport { AppComponent } from './app.component';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { DashboardComponent } from './dashboard/dashboard.component';\r\nimport { EditBookComponent } from './edit-book/edit-book.component';\r\nimport { EditReaderComponent } from './edit-reader/edit-reader.component';\r\nimport { CoreModule } from './core/core.module';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    DashboardComponent,\r\n    AddBookComponent,\r\n    EditReaderComponent,\r\n    EditBookComponent,\r\n    AddReaderComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    FormsModule,\r\n    CoreModule,\r\n    HttpClientModule\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// /Users/sagarika.c/Downloads/angular-http-communication/02/demos/demos/Before/booktracker/src/app/app.module.ts","import { Injectable, ErrorHandler } from '@angular/core';\r\nimport { BookTrackerError } from 'app/models/bookTrackerError';\r\n\r\n@Injectable()\r\nexport class BookTrackerErrorHandlerService implements ErrorHandler {\r\n\r\n  handleError(error: any): void {\r\n    let customError: BookTrackerError = new BookTrackerError();\r\n    customError.errorNumber = 200;\r\n    customError.message = (<Error>error).message;\r\n    customError.friendlyMessage = 'An error occurred. Please try again.';\r\n\r\n    console.log(customError);\r\n  }\r\n\r\n  constructor() { }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// /Users/sagarika.c/Downloads/angular-http-communication/02/demos/demos/Before/booktracker/src/app/core/book-tracker-error-handler.service.ts","import { Injectable } from \"@angular/core\";\nimport { Resolve , ActivatedRouteSnapshot , RouterStateSnapshot } from \"@angular/router\";\nimport { BookTrackerError } from \"app/models/bookTrackerError\";\nimport { Book } from \"app/models/book\";\nimport { DataService } from \"app/core/data.service\";\nimport { Observable } from 'rxjs/Observable';\nimport { of } from 'rxjs/observable/of';\nimport {catchError } from 'rxjs/operators'\n \n\n\n\n\n@Injectable()\nexport class BookResolverService implements Resolve<Book[] | BookTrackerError>{\n\n    constructor ( private dataService : DataService){ }\n\n    //  Here we know that we will make call to get allBooks, So the return type of resolve will be Book[] or BookTrackerError\n    // No need to subscribe here, Angular wil auto subscribe\n    resolve( route : ActivatedRouteSnapshot , state: RouterStateSnapshot): Observable<Book[] | BookTrackerError>{\n\n        return   this.dataService.getAllBooks()\n            .pipe(\n               catchError( error => of(error) )\n          )\n\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /Users/sagarika.c/Downloads/angular-http-communication/02/demos/demos/Before/booktracker/src/app/core/bookResolver.service.ts","import { Injectable } from \"@angular/core\";\nimport { HttpInterceptor , HttpRequest , HttpHandler , HttpEvent , HttpResponse} from \"@angular/common/http\";\nimport { Observable } from \"rxjs/Observable\";\nimport { of } from 'rxjs/observable/of'; \nimport { tap} from 'rxjs/operators'\nimport { HttpCacheService } from \"app/core/http-cache.service\";\n\n\n@Injectable()\n\nexport class Cachenterceptor  implements HttpInterceptor{\nconstructor( private cacheService : HttpCacheService){\n    \n}\n    intercept(req :HttpRequest<any> , next : HttpHandler) :Observable<HttpEvent<any>>{\n    //  If response is other than get , Then get a fresh copy\n        if( req.method !== 'GET'){\n            console.log( \" invalidating cache \" + req.method  + req.url);\n             this.cacheService.invalidateCache();\n             return next.handle(req)\n\n        }\n \n        //   get the cached response\n        const cachedResponse =  this.cacheService.get(req.url);\n        // Check if you get something\n        if(cachedResponse){\n            console.log( \" returning cached response \" + cachedResponse.url);\n\n            return of(cachedResponse)\n        } \n\n   return next.handle(req) \n   .pipe(\n       tap(event =>{\n           if(event instanceof HttpResponse){\n                     console.log(\"adding to cache response \" +  req.url)\n                     this.cacheService.put(req.url , event )\n           }\n       })\n   )\n      \n    }\n}\n\n\n// WEBPACK FOOTER //\n// /Users/sagarika.c/Downloads/angular-http-communication/02/demos/demos/Before/booktracker/src/app/core/cache-interceptor.ts","import { NgModule, Optional, SkipSelf, ErrorHandler } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { LoggerService } from './logger.service';\r\nimport { DataService } from './data.service';\r\nimport { PlainLoggerService } from \"./plain-logger.service\";\r\nimport { throwIfAlreadyLoaded } from \"app/core/module-import-guard\";\r\nimport { BookTrackerErrorHandlerService } from './book-tracker-error-handler.service';\r\nimport { BookResolverService } from 'app/core/bookResolver.service';\r\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { HeaderInterceptorService } from 'app/core/header.intercceptor';\r\nimport { LogResponseInterceptor } from 'app/core/log-response.interceptor';\r\nimport { HttpCacheService } from './http-cache.service';\r\nimport { Cachenterceptor } from 'app/core/cache-interceptor';\r\n\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule\r\n  ],\r\n  declarations: [],\r\n  providers: [\r\n    LoggerService, \r\n    DataService, \r\n    { provide: ErrorHandler, useClass: BookTrackerErrorHandlerService },\r\n    { provide : HTTP_INTERCEPTORS , useClass: HeaderInterceptorService, multi: true},\r\n    // Provide all interceptors one after the other in the same way. The modified request follows this sequence when executing interceptor next.handle() method \r\n    { provide : HTTP_INTERCEPTORS , useClass: LogResponseInterceptor, multi: true},\r\n    { provide : HTTP_INTERCEPTORS , useClass: Cachenterceptor, multi: true},\r\n    BookResolverService,\r\n    HttpCacheService\r\n  ]\r\n})\r\nexport class CoreModule {\r\n\r\n  constructor( @Optional() @SkipSelf() parentModule: CoreModule) {\r\n    throwIfAlreadyLoaded(parentModule, 'CoreModule');\r\n  }\r\n  \r\n }\r\n\n\n\n// WEBPACK FOOTER //\n// /Users/sagarika.c/Downloads/angular-http-communication/02/demos/demos/Before/booktracker/src/app/core/core.module.ts","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http'\r\nimport { allBooks, allReaders } from 'app/data';\r\nimport { LoggerService } from './logger.service';\r\nimport { Reader } from \"app/models/reader\";\r\nimport { Book } from \"app/models/book\";\r\nimport { BookTrackerError } from 'app/models/bookTrackerError';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { OldBook } from \"app/models/oldBook\";\r\nimport { map , tap , catchError}  from 'rxjs/operators'\r\nimport { ErrorObservable } from 'rxjs/observable/ErrorObservable';\r\n\r\n@Injectable()\r\nexport class DataService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  mostPopularBook: Book = allBooks[0];\r\n\r\n  setMostPopularBook(popularBook: Book): void {\r\n    this.mostPopularBook = popularBook;\r\n  }\r\n\r\n  getAllReaders() : Observable<Reader[]> {\r\n     return this.http.get<Reader[]>('/api/readers')\r\n  }\r\n\r\n  getReaderById(id: number): Observable<Reader> {\r\n    return this.http.get<Reader>(`api/readers/${id}`);\r\n  }\r\n\r\n  getAllBooks() :Observable<Book[]  |  BookTrackerError> {\r\n    console.log(\"getAllBooks called\")\r\n      return    this.http.get<Book[]>('api/books')\r\n      .pipe(\r\n         catchError( error=> this.handleError(error) )\r\n      );\r\n  }\r\n\r\n  handleError( error : HttpErrorResponse) : Observable<BookTrackerError>{\r\n         let errorObj= new BookTrackerError();\r\n         errorObj.errorNumber=100;\r\n         errorObj.message= error.statusText;\r\n         errorObj.friendlyMessage=\"Error occured while fetching books record\";\r\n         return ErrorObservable.create(errorObj);\r\n\r\n  }\r\n\r\n  getBookById(id: number): Observable<Book> {\r\n    // Here the getHeaders variable is storing the header options\r\n     let  getHeaders : HttpHeaders = new HttpHeaders({\r\n       Accept  :  'application/json',\r\n       Authorization  :  'my-token'\r\n     });\r\n\r\n    //  Http get can take a second parameter which is an object with several properties\r\n    return  this.http.get<Book>(`api/books/${id}`,{\r\n       headers: getHeaders\r\n    })\r\n  }\r\n\r\n  getOldBookById(id:number):Observable<OldBook>{\r\n     return  this.http.get<Book>(`api/books/${id}`)\r\n     .pipe(\r\n        map(b => <OldBook>{\r\n               bookTitle :  b.title,\r\n               year :  b.publicationYear\r\n        }),\r\n        tap( classicBook =>{\r\n          console.log(`the original book retuned was `);\r\n          console.log(classicBook);\r\n        }\r\n          )\r\n     )\r\n  }\r\n\r\n  addBook (newBook : Book) : Observable<Book> {\r\n   return this.http.post<Book>('api/books' , newBook, {\r\n       headers: new HttpHeaders({\r\n          'Content-Type' : 'application/json'\r\n       })\r\n    });\r\n  }\r\n\r\nupdateBook (updatedBook : Book) : Observable<void> {\r\n    return this.http.put<void>(`api/books/${updatedBook.bookID}` , updatedBook)\r\n   }\r\n\r\n  deleteBook( bookId:number ) :Observable<void> {\r\n      return this.http.delete<void>( `/api/books/${bookId}`);\r\n  }\r\n\r\n  updateReader(updatedReader: Reader) : Observable<void> {\r\n    return this.http.put<void>(`api/readers/${updatedReader.readerID}` , updatedReader)\r\n  }\r\n  addReader(newReader : Reader) : Observable<Reader>{\r\n    return this.http.post<Reader>(`api/readers` , newReader)\r\n  }\r\n\r\n  deleteReader( readerId: number ) : Observable<void> {\r\n     return this.http.delete<void>(`api/readers/${readerId}`)\r\n  }\r\n\r\n \r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// /Users/sagarika.c/Downloads/angular-http-communication/02/demos/demos/Before/booktracker/src/app/core/data.service.ts","import { Injectable } from \"@angular/core\";\nimport { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent } from \"@angular/common/http\";\nimport { Observable } from \"rxjs/Observable\";\nimport { tap } from 'rxjs/operators'\n\n\n@Injectable()\n\nexport class HeaderInterceptorService implements HttpInterceptor {\n\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        console.log(\"AddbookInterceptor  \" + req.url);\n        //     Make a clone of original request and use overloads provided with req.clone();\n        let transformReq = req.clone({\n            setHeaders: {\n                'Content-Type': 'application/json',\n                'Authorization': 'custom-token '\n            }\n        })\n\n        //  Provide to interceptor next in the chain. See Log response interceptor to know how to configure multiple interceptors\n        return next.handle(transformReq)\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /Users/sagarika.c/Downloads/angular-http-communication/02/demos/demos/Before/booktracker/src/app/core/header.intercceptor.ts","import { Injectable } from '@angular/core';\nimport { HttpResponse } from '@angular/common/http';\n\n@Injectable()\nexport class HttpCacheService {\n\n  constructor() { }\n private requests ={}\n  put( url : string , response : HttpResponse<any>): void{\n     this. requests[url] = response;\n  }\n \n  get(url : string) : HttpResponse<any> | undefined {\n    return this.requests[url];\n  }\n\n  invalidateUrl(url:string) : void {\n    this.requests[url] = undefined;\n  }\n  invalidateCache( ):void{\n    this.requests ={}\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/sagarika.c/Downloads/angular-http-communication/02/demos/demos/Before/booktracker/src/app/core/http-cache.service.ts","import { Injectable } from \"@angular/core\";\nimport { HttpInterceptor , HttpRequest , HttpHandler , HttpEvent , HttpEventType} from \"@angular/common/http\";\nimport { Observable } from \"rxjs/Observable\";\n\nimport { tap } from 'rxjs/operators'\n\n\n\n\n\nInjectable()\n\nexport class LogResponseInterceptor implements HttpInterceptor {\n\n    intercept(req : HttpRequest<any>  , next : HttpHandler) : Observable<HttpEvent<any>>{\n\n//      If I were planning to manipulate the HttpRequest, this is where I would make a copy of the request and start making changes to it.\n//  I'm only interested in manipulating the response here though. Do note that I can manipulate the request and response in the same interceptor. \n//  I'm choosing to use two here for a couple of reasons. First I want to show you how to configure multiple interceptors, and second, \n//  the functionality provided by each of them is very different, so I'd rather keep them separate from each other. \n//  I'm not manipulating the request, so I can just pass the original request to the handle method. \n//  I'm then going to use the RxJS tap operator to give me access to the response. I'll chain on a call to the pipe method, and pass it the operator\n  console.log( \"logInterceptor  \" + req.url)\n         return next.handle(req) \n          .pipe(\n              tap( event => {\n                  if( event.type ===HttpEventType.Response)\n                  {\n                      console.log(\"log body interceptor response\")\n                      console.log( event.body)\n                  }\n              })\n          )\n    }\n} \n\n\n// WEBPACK FOOTER //\n// /Users/sagarika.c/Downloads/angular-http-communication/02/demos/demos/Before/booktracker/src/app/core/log-response.interceptor.ts","import { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class LoggerService {\r\n  log(message: string): void {\r\n    const timeString: String = new Date().toLocaleTimeString();\r\n    console.log(`${message} (${timeString})`);\r\n  }\r\n\r\n  error(message: string): void {\r\n    console.error(`ERROR: ${message}`);\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// /Users/sagarika.c/Downloads/angular-http-communication/02/demos/demos/Before/booktracker/src/app/core/logger.service.ts","export function throwIfAlreadyLoaded(parentModule: any, moduleName: string) {\r\n  if (parentModule) {\r\n    throw new Error(`${moduleName} has already been loaded. Import Core modules in the AppModule only.`);\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// /Users/sagarika.c/Downloads/angular-http-communication/02/demos/demos/Before/booktracker/src/app/core/module-import-guard.ts","module.exports = \"<div class=\\\"container\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-lg-4\\\">\\r\\n      <div class=\\\"panel panel-primary\\\">\\r\\n        <div class=\\\"panel-heading\\\">\\r\\n          <h3 class=\\\"panel-title\\\">All Books</h3>\\r\\n        </div>\\r\\n        <div class=\\\"panel-body\\\">\\r\\n        <li *ngFor='let book of allBooks'>\\r\\n          <i>{{book.title}}</i>\\r\\n          <a [routerLink]=\\\"['/editbook', book.bookID]\\\">Edit</a>\\r\\n          <a (click)=\\\"deleteBook(book.bookID)\\\">Delete</a>\\r\\n        </li>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-lg-4\\\">\\r\\n      <div class=\\\"panel panel-primary\\\">\\r\\n        <div class=\\\"panel-heading\\\">\\r\\n          <h3 class=\\\"panel-title\\\">All Readers</h3>\\r\\n        </div>\\r\\n        <div class=\\\"panel-body\\\">\\r\\n        <li *ngFor='let reader of allReaders'>\\r\\n          {{reader.name}}\\r\\n          <a [routerLink]=\\\"['/editreader', reader.readerID]\\\">Edit</a>\\r\\n          <a (click)=\\\"deleteReader(reader.readerID)\\\">Delete</a>\\r\\n        </li>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-lg-4\\\">\\r\\n      <div class=\\\"panel panel-primary\\\">\\r\\n        <div class=\\\"panel-heading\\\">\\r\\n          <h3 class=\\\"panel-title\\\">Most Popular Book</h3>\\r\\n        </div>\\r\\n        <div class=\\\"panel-body\\\">\\r\\n          <i>{{mostPopularBook.title}}</i> by {{mostPopularBook.author}}\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/sagarika.c/Downloads/angular-http-communication/02/demos/demos/Before/booktracker/src/app/dashboard/dashboard.component.html\n// module id = ../../../../../src/app/dashboard/dashboard.component.html\n// module chunks = main","import { Component, OnInit, VERSION } from '@angular/core';\r\nimport { Observable } from 'rxjs/Rx';\r\nimport { Title } from '@angular/platform-browser';\r\n\r\nimport { Book } from \"app/models/book\";\r\nimport { Reader } from \"app/models/reader\";\r\nimport { DataService } from 'app/core/data.service';\r\nimport { BookTrackerError } from 'app/models/bookTrackerError';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  templateUrl: './dashboard.component.html',\r\n  styles: []\r\n})\r\nexport class DashboardComponent implements OnInit {\r\n\r\n  allBooks: Book[];\r\n  allReaders: Reader[];\r\n  mostPopularBook: Book;\r\n\r\n  constructor(private dataService: DataService, private route : ActivatedRoute,\r\n              private title: Title) { }\r\n  \r\n  ngOnInit() {\r\n    // this.dataService.getAllBooks()\r\n    //   .subscribe(\r\n    //      (data:Book[])=>this.allBooks=data,\r\n    //      (err:BookTrackerError)=>console.log(err.friendlyMessage),\r\n    //      (    )=>console.log(\"All books retrieved\")\r\n    //   );\r\n     \r\n     let resolvedData= this.route.snapshot.data['resolvedBooks'];\r\n\r\n     if( resolvedData instanceof BookTrackerError){\r\n        console.log( resolvedData.friendlyMessage)\r\n     } else{\r\n       this.allBooks= resolvedData;\r\n     }\r\n\r\n     this.dataService.getAllReaders()\r\n      .subscribe(\r\n       (data : Reader[]) => this.allReaders = data, \r\n       (err : any) => console.log(err) ,\r\n       (  )  => console.log(this.allReaders)\r\n      );\r\n      \r\n    this.mostPopularBook = this.dataService.mostPopularBook;\r\n\r\n    this.title.setTitle(`Book Tracker ${VERSION.full}`);\r\n  }\r\n\r\n  deleteBook(bookID: number): void {\r\n     this.dataService.deleteBook(bookID) \r\n       .subscribe(\r\n         ( data : void)=> {\r\n                    this. allBooks = this. allBooks.filter( book => book.bookID !== bookID) \r\n                  },\r\n          (err )  => console.log(err)\r\n       )\r\n  }\r\n\r\n  deleteReader(readerID: number): void {\r\n    this.dataService.deleteReader(readerID) \r\n      .subscribe (\r\n        ( data : void ) => {\r\n          this. allReaders = this. allReaders.filter( reader => reader.readerID !== readerID) \r\n        }\r\n      )\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// /Users/sagarika.c/Downloads/angular-http-communication/02/demos/demos/Before/booktracker/src/app/dashboard/dashboard.component.ts","import { Book } from \"app/models/book\";\r\nimport { Reader } from \"app/models/reader\";\r\n\r\nexport const allReaders: Reader[] = [\r\n    { readerID: 1, name: 'Marie', weeklyReadingGoal: 400, totalMinutesRead: 5600 },\r\n    { readerID: 2, name: 'Daniel', weeklyReadingGoal: 210, totalMinutesRead: 3000 },\r\n    { readerID: 3, name: 'Lanier', weeklyReadingGoal: 140, totalMinutesRead: 600 }\r\n  ];\r\n\r\nexport const allBooks: Book[] = [\r\n    { bookID: 1, title: 'Goodnight Moon', author: 'Margaret Wise Brown', publicationYear: 1953 },\r\n    { bookID: 2, title: 'Winnie-the-Pooh', author: 'A. A. Milne', publicationYear: 1926 },\r\n    { bookID: 3, title: 'Where the Wild Things Are', author: 'Maurice Sendak', publicationYear: 1963 },\r\n    { bookID: 4, title: 'The Hobbit', author: 'J. R. R. Tolkien', publicationYear: 1937 },\r\n    { bookID: 5, title: 'Curious George', author: 'H. A. Rey', publicationYear: 1941 },\r\n    { bookID: 6, title: 'Alice\\'s Adventures in Wonderland', author: 'Lewis Carroll', publicationYear: 1865 },\r\n];\n\n\n// WEBPACK FOOTER //\n// /Users/sagarika.c/Downloads/angular-http-communication/02/demos/demos/Before/booktracker/src/app/data.ts","module.exports = \"<div class=\\\"col-lg-5\\\">\\r\\n  <div class=\\\"well bs-component\\\">\\r\\n    <form class=\\\"form-horizontal\\\">\\r\\n      <fieldset>\\r\\n        <legend>Edit Book</legend>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"inputTitle\\\" class=\\\"col-lg-3 control-label\\\">Title</label>\\r\\n          <div class=\\\"col-lg-8\\\">\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputTitle\\\" placeholder=\\\"Title\\\" [(ngModel)]=\\\"selectedBook && selectedBook.title\\\" name=\\\"title\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"inputAuthor\\\" class=\\\"col-lg-3 control-label\\\">Author</label>\\r\\n          <div class=\\\"col-lg-8\\\">\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputAuthor\\\" placeholder=\\\"Author\\\" [(ngModel)]=\\\"selectedBook && selectedBook.author\\\" name=\\\"author\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"inputYear\\\" class=\\\"col-lg-3 control-label\\\">Year</label>\\r\\n          <div class=\\\"col-lg-8\\\">\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputYear\\\" placeholder=\\\"Year Published\\\" [(ngModel)]=\\\"selectedBook && selectedBook.publicationYear\\\" name=\\\"publicationYear\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <div class=\\\"col-lg-8 col-lg-offset-3\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"saveChanges()\\\">Save</button>\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"setMostPopular()\\\">Set As Most Popular</button>\\r\\n          </div>\\r\\n        </div>\\r\\n      </fieldset>\\r\\n    </form>\\r\\n  </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/sagarika.c/Downloads/angular-http-communication/02/demos/demos/Before/booktracker/src/app/edit-book/edit-book.component.html\n// module id = ../../../../../src/app/edit-book/edit-book.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\nimport { Book } from 'app/models/book';\r\nimport { DataService } from 'app/core/data.service';\r\nimport { OldBook } from 'app/models/oldBook';\r\n\r\n@Component({\r\n  selector: 'app-edit-book',\r\n  templateUrl: './edit-book.component.html',\r\n  styles: []\r\n})\r\nexport class EditBookComponent implements OnInit {\r\n\r\n  selectedBook: Book;\r\n\r\n  constructor(private route: ActivatedRoute,\r\n              private dataService: DataService) { }\r\n\r\n  ngOnInit() {\r\n    let bookID: number = parseInt(this.route.snapshot.params['id']);\r\n     this.dataService.getBookById(bookID)\r\n       .subscribe(\r\n          (data:Book)=>this.selectedBook=data,\r\n          (error:any)=> console.log(error),\r\n          ( )=>console.log(this.selectedBook  )\r\n\r\n      );\r\n\r\n      this.dataService.getOldBookById(bookID)\r\n       .subscribe( \r\n          (data : OldBook) => console.log(data.bookTitle )\r\n       )\r\n  }\r\n\r\n  setMostPopular(): void {\r\n    this.dataService.setMostPopularBook(this.selectedBook);\r\n  }\r\n\r\n  saveChanges(): void {\r\n    this.dataService.updateBook(this.selectedBook)\r\n      .subscribe(\r\n      ( data  )  => console.log(`The book  with id  ${this.selectedBook.bookID} is updated sucessfully` ),\r\n      (err : any )   => console.log(err)\r\n      )\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// /Users/sagarika.c/Downloads/angular-http-communication/02/demos/demos/Before/booktracker/src/app/edit-book/edit-book.component.ts","module.exports = \"<div class=\\\"col-lg-5\\\">\\r\\n  <div class=\\\"well bs-component\\\">\\r\\n    <form class=\\\"form-horizontal\\\">\\r\\n      <fieldset>\\r\\n        <legend>Edit Reader</legend>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"inputGoal\\\" class=\\\"col-lg-3 control-label\\\">Name</label>\\r\\n          <div class=\\\"col-lg-8\\\">\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputGoal\\\" placeholder=\\\"Name\\\" [(ngModel)]=\\\"selectedReader && selectedReader.name\\\" name=\\\"name\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"inputGoal\\\" class=\\\"col-lg-3 control-label\\\">Weekly Goal</label>\\r\\n          <div class=\\\"col-lg-8\\\">\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputGoal\\\" placeholder=\\\"Weekly Goal\\\" [(ngModel)]=\\\"selectedReader && selectedReader.weeklyReadingGoal\\\" name=\\\"weeklyReaddingGoal\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"inputTotal\\\" class=\\\"col-lg-3 control-label\\\">Total Read</label>\\r\\n          <div class=\\\"col-lg-8\\\">\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputTotal\\\" placeholder=\\\"Total Minutes Read\\\" [(ngModel)]=\\\"selectedReader && selectedReader.totalMinutesRead\\\" name=\\\"totalMinutesRead\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"inputTotal\\\" class=\\\"col-lg-3 control-label\\\"  [(ngModel)]=\\\"selectedReader && currentBadge\\\"  >Current Badge</label>\\r\\n          <div class=\\\"col-lg-8\\\">\\r\\n            {{ currentBadge }}\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <div class=\\\"col-lg-10 col-lg-offset-3\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"saveChanges()\\\">Save</button>\\r\\n          </div>\\r\\n        </div>\\r\\n      </fieldset>\\r\\n    </form>\\r\\n  </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/sagarika.c/Downloads/angular-http-communication/02/demos/demos/Before/booktracker/src/app/edit-reader/edit-reader.component.html\n// module id = ../../../../../src/app/edit-reader/edit-reader.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\nimport { Reader } from \"app/models/reader\";\r\nimport { DataService } from 'app/core/data.service';\r\nimport { BadgeService } from 'app/services/badge.service';\r\n\r\n@Component({\r\n  selector: 'app-edit-reader',\r\n  templateUrl: './edit-reader.component.html',\r\n  styles: [],\r\n  providers: [BadgeService]\r\n})\r\nexport class EditReaderComponent implements OnInit {\r\n\r\n  selectedReader: Reader;\r\n  currentBadge: string;\r\n\r\n  constructor(private route: ActivatedRoute,\r\n              private dataService: DataService,\r\n              private badgeService: BadgeService) { }\r\n\r\n  ngOnInit() {\r\n    let readerID: number = parseInt(this.route.snapshot.params['id']);\r\n   this.dataService.getReaderById(readerID) \r\n    .subscribe(\r\n      ( data : Reader) => this.selectedReader = data,\r\n      ( err : any ) => console.log(err)\r\n    );\r\n\r\n    this.currentBadge = this.badgeService.getReaderBadge(this.selectedReader.totalMinutesRead);\r\n  }\r\n\r\n  saveChanges() {\r\n    this.dataService.updateReader(this.selectedReader)\r\n      .subscribe (\r\n        ( data : void) => console.log(`The reader with reader id ${this.selectedReader.readerID} is updated successfully` )\r\n      )\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// /Users/sagarika.c/Downloads/angular-http-communication/02/demos/demos/Before/booktracker/src/app/edit-reader/edit-reader.component.ts","export class BookTrackerError {\r\n  errorNumber: number;\r\n  message: string;\r\n  friendlyMessage: string;\r\n}\n\n\n// WEBPACK FOOTER //\n// /Users/sagarika.c/Downloads/angular-http-communication/02/demos/demos/Before/booktracker/src/app/models/bookTrackerError.ts","import { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class BadgeService {\r\n\r\n  constructor() { }\r\n\r\n  getReaderBadge(minutesRead: number): string {\r\n\r\n    if (minutesRead > 5000) {\r\n      return 'Book Worm';\r\n    }\r\n    else if (minutesRead > 2500) {\r\n      return 'Page Turner';\r\n    }\r\n    else {\r\n      return 'Getting Started';\r\n    }\r\n    \r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// /Users/sagarika.c/Downloads/angular-http-communication/02/demos/demos/Before/booktracker/src/app/services/badge.service.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// /Users/sagarika.c/Downloads/angular-http-communication/02/demos/demos/Before/booktracker/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// /Users/sagarika.c/Downloads/angular-http-communication/02/demos/demos/Before/booktracker/src/main.ts"],"sourceRoot":"webpack:///"}